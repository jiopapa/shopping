<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springBootMVCShopping.mapper.UserMapper">
<resultMap type="authInfo" id="authInfoResultMap">
	<constructor>
	<arg column="member_id" javaType="string" />
	<arg column="member_Pw" javaType="string" />
	<arg column="member_Name" javaType="string" />
	<arg column="grade" javaType="string" />
	<arg column="member_Email" javaType="string" />
	<arg column="member_email_conf" javaType="string" />
	</constructor>
</resultMap>

<update id="userCheckUpdate" parameterType="string">
	update members set member_email_conf = 'T'
	where member_email_conf is null
	and member_email = #{email}

</update>



<insert id="userInsert" parameterType="mem">
insert into members(member_num,member_id,member_pw,member_name,member_addr
					, member_addr_detail, member_post, member_phone1,member_phone2
					, member_regist, member_birth, gender, member_email, member_email_conf
					, point) 
values				((select concat('mem',coalesce(max(substring(member_num,4)::integer),100000)+1)from members)
					,#{memberId},#{memberPw},#{memberName},#{memberAddr}
					,#{memberAddrDetail},#{memberPost},#{memberPhone1},#{memberPhone2}
					,now(),#{memberBirth},#{gender},#{memberEmail},null,0)

</insert>

<select id="loginSelect" parameterType="string" resultMap="authInfoResultMap">
select member_id, member_pw, member_name, 'mem' grade, member_email, member_email_conf
from members
where member_id = #{userId}
union
select emp_id, emp_Pw, emp_name, 'emp',emp_email, 'T'
from employees
where emp_id =#{userId}


</select>
</mapper>